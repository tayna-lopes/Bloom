// <auto-generated />
using System;
using Bloom.DAO.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bloom.DAO.Migrations
{
    [DbContext(typeof(BloomContext))]
    [Migration("20210327171608_FilmeMapping")]
    partial class FilmeMapping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bloom.BLL.Entities.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int>("Classificacao");

                    b.Property<Guid>("CriadorId");

                    b.Property<string>("Diretor");

                    b.Property<string>("Elenco");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("Aventura");

                    b.Property<string>("Pais");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("Pendente");

                    b.Property<string>("Titulo");

                    b.Property<Guid?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Bloom.BLL.Entities.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Alterado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("AlteradoPor")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Cidade");

                    b.Property<DateTime>("Criado")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DataDeNascimento")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Email");

                    b.Property<string>("Estado");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<string>("Username");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Bloom.BLL.Entities.Filme", b =>
                {
                    b.HasOne("Bloom.BLL.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
